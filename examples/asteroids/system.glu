let { negate } = import! std.num
let { pi } = import! std.float
let entity = import! entity

let { AddComponent, Position, Motion, Rotation, ? } = import! component

let new_vel x y : Float -> Float -> Position = { x, y }

let add_component ?c l r a e : [AddComponent a] -> LazyUpdate -> ReflectionTable -> a -> Entity -> () =
    entity.add_component l r c.component_name a e


let update r : { pos : Position, rot: Rotation } -> { pos : Position, rot : Rotation } =
    let { pos, rot } = r

    let rot = rot + 0.1

    { pos = pos + { x = 1., y = 0. }, rot }

update
